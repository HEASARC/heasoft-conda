--- heacore/heasoftpy/install.py
+++ heacore/heasoftpy/install.py
@@ -43,6 +43,13 @@
     """
     def run(self):
-        _do_install()
+        list_of_files = _do_install()
+        
+        # add the generated files to heasoftpy.egg-info so they are 
+        # installed correctly
+        os.makedirs('heasoftpy.egg-info', exist_ok=True)
+        with open(f'heasoftpy.egg-info/SOURCES.txt', 'a') as fp:
+            fp.write('\n' + ('\n'.join(list_of_files)))
+        
         super().run()
 
 
@@ -51,10 +58,11 @@
     logger.info('Starting heasoftpy installation ...')
 
     # python wrappers for heasoft-native tools
-    _create_py_wrappers()
+    list_1 = _create_py_wrappers()
 
     # add subpackages
-    _add_sub_packages()
+    list_2 = _add_sub_packages()
+    return list_1 + list_2
 
 ## ---------------------------------- ##
 ## python wrappers for built-in tools ##
@@ -74,10 +82,6 @@
     logger.info('Creating python wrappers ...')
     try:
         list_of_files = generate_py_code()
-        # add the generated files to heasoftpy.egg-info so they are 
-        # installed correctly
-        with open(f'heasoftpy.egg-info/SOURCES.txt', 'a') as fp:
-            fp.write('\n' + ('\n'.join(list_of_files)))
     except:
         logger.error('Failed in generating python wrappers')
         raise
@@ -86,6 +90,7 @@
 
     # remove the __INSTALLING_HSP variable we added at the start
     del os.environ['__INSTALLING_HSP']
+    return list_of_files
 ## ---------------------------------- ##
 
 ## ---------------------------------- ##
@@ -106,7 +111,7 @@
     logger.info('Looking for subpackages ...')
     list_of_files = []
     for subpackage in SUBPACKAGES:
-        pth = f"{headas}/../{subpackage}/{inst_dir}/lib/python/heasoftpy/{subpackage}"
+        pth = f"{headas}/lib/python/heasoftpy/{subpackage}"
         if os.path.exists(pth):
             logger.info(f'Found {subpackage} ...')
             if os.path.exists(f'heasoftpy/{subpackage}'):
@@ -124,10 +129,7 @@
                              if lf[-3:] == '.py']
         else:
             logger.info(f'No {subpackage} subpackage, skipping ...')
-        # add the generated files to heasoftpy.egg-info so they are
-        # installed correctly
-        with open(f'heasoftpy.egg-info/SOURCES.txt', 'a') as fp:
-            fp.write('\n' + ('\n'.join(list_of_files)))
+    return list_of_files
 
 
     
